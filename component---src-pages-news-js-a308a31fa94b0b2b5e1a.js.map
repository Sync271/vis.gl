{"version":3,"sources":["webpack:///./src/components/news.js","webpack:///./src/pages/news.js","webpack:///./src/components/link-with-arrow.js"],"names":["NewsEntry","publication","date","image","title","url","className","src","width","height","alt","label","News","imageResolver","query","render","data","console","log","id","allNewsYaml","edges","map","node","key","name","IndexPage","allFile","reduce","prev","curr","relativePath","publicURL","page","LinkWithArrow","classNames","href","Arrow","viewBox","xmlns","d","fill","fillRule"],"mappings":"yKAyCA,SAASA,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IACpD,OACE,yBAAKC,UAAU,cACb,4BAAKL,GACL,uBAAGK,UAAU,oBAAoBJ,GACjC,yBACEI,UAAU,oBACVC,IAAKJ,EACLK,MAAM,MACNC,OAAO,MACPC,IAAKN,IAEP,uBAAGE,UAAU,qBAAqBF,GAClC,kBAAC,IAAD,CACEE,UAAU,mBACVK,MAAM,eACNN,IAAKA,KAMEO,MA1DF,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACX,kBAAC,cAAD,CACEC,MAAK,YAeLC,OAAQ,SAAAC,GAEN,OADAC,QAAQC,IAAIF,EAAMH,GAElB,yBAAKM,GAAG,QACN,yBAAKb,UAAU,iBACb,4BAAK,iBACL,2BAAI,8CAGN,yBAAKA,UAAU,cACZU,EAAKI,YAAYC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC1B,kBAACvB,EAAD,eAAWwB,IAAKD,EAAKE,MAAUF,EAA/B,CAAqCpB,MAAOU,EAAcU,EAAKpB,mBCA5DuB,UA3BG,SAAC,GAAc,IACzBb,EADwB,EAAXG,KACQW,QAAQN,MAAMO,QAAO,SAACC,EAAMC,GAErD,OADAD,EAAKC,EAAKP,KAAKQ,cAAgBD,EAAKP,KAAKS,UAClCH,IACN,IACH,OACE,kBAAC,IAAD,CAAQI,KAAK,QACX,kBAAC,EAAD,CAAMpB,cAAeA,O,kCCb3B,gFAGe,SAASqB,EAAT,GAAmD,IAA1BvB,EAAyB,EAAzBA,MAAON,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,UAClD,OACE,uBAAGA,UAAW6B,IAAW,kBAAmB7B,GAAY8B,KAAM/B,GAC5D,0BAAMC,UAAU,SAASK,GACzB,kBAAC0B,EAAD,OAKN,SAASA,IACP,OACE,yBACE/B,UAAU,QACVE,MAAM,KACNC,OAAO,KACP6B,QAAQ,YACRC,MAAM,8BAEN,0BACEC,EAAE,8GACFC,KAAK,eACLC,SAAS","file":"component---src-pages-news-js-a308a31fa94b0b2b5e1a.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport LinkWithArrow from './link-with-arrow';\n\nconst News = ({ imageResolver }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allNewsYaml {\n          edges {\n            node {\n              date\n              title\n              url\n              image\n              publication\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      console.log(data, imageResolver);\n      return (\n      <div id=\"news\">\n        <div className=\"section-title\">\n          <h2>{'News & Events'}</h2>\n          <p>{'Learn about how vis.gl is creating impact'}</p>\n        </div>\n\n        <div className=\"news-items\">\n          {data.allNewsYaml.edges.map(({ node }) => (\n            <NewsEntry key={node.name} {...node} image={imageResolver[node.image]} />\n          ))}\n        </div>\n      </div>)\n    }}\n  />\n);\n\nfunction NewsEntry({ publication, date, image, title, url }) {\n  return (\n    <div className=\"news--item\">\n      <h3>{publication}</h3>\n      <p className=\"news--item--date\">{date}</p>\n      <img\n        className=\"news--item--image\"\n        src={image}\n        width=\"240\"\n        height=\"143\"\n        alt={title}\n      />\n      <p className=\"news--item--title\">{title}</p>\n      <LinkWithArrow\n        className=\"news--item--read\"\n        label=\"Read Article\"\n        url={url}\n      />\n    </div>\n  );\n}\n\nexport default News;\n","import React from 'react';\nimport Layout from '../components/layout.js';\nimport { graphql } from 'gatsby';\n\nimport News from '../components/news';\n\nconst IndexPage = ({ data }) => {\n  const imageResolver = data.allFile.edges.reduce((prev, curr) => {\n    prev[curr.node.relativePath] = curr.node.publicURL;\n    return prev;\n  }, {});\n  return (\n    <Layout page=\"blog\">\n      <News imageResolver={imageResolver}/>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n      edges {\n        node {\n          relativePath\n          name\n          extension\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from 'react'\nimport classNames from 'classnames'\n\nexport default function LinkWithArrow({ label, url, className }) {\n  return (\n    <a className={classNames('link-with-arrow', className)} href={url}>\n      <span className=\"label\">{label}</span>\n      <Arrow />\n    </a>\n  )\n}\n\nfunction Arrow() {\n  return (\n    <svg\n      className=\"arrow\"\n      width=\"21\"\n      height=\"13\"\n      viewBox=\"0 0 21 13\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.8 5.143H0v1.714h17.14l-4.283 4.283 1.2 1.2 5.998-5.997-.173-.172.173-.172L14.058 0l-1.2 1.2 3.94 3.943z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n"],"sourceRoot":""}