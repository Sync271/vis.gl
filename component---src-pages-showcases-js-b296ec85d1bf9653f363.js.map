{"version":3,"sources":["webpack:///./src/components/showcase.js","webpack:///./src/pages/showcases.js","webpack:///./src/components/link-with-arrow.js"],"names":["Case","description","image","label","name","url","className","style","backgroundImage","Showcase","imageResolver","query","render","data","id","allShowcaseYaml","edges","map","node","key","IndexPage","allFile","reduce","prev","curr","relativePath","publicURL","page","LinkWithArrow","classNames","href","Arrow","width","height","viewBox","xmlns","d","fill","fillRule"],"mappings":"0KAuCA,SAASA,EAAT,GAAyD,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAC/C,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,wBAEjB,yBACEA,UAAU,aACVC,MAAO,CAAEC,gBAAgB,OAAQN,EAAT,QAG5B,4BAAKE,GACL,uBAAGE,UAAU,eAAeL,GAC5B,kBAAC,IAAD,CAAeI,IAAKA,EAAKF,MAAOA,KAKvBM,MAxDE,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACf,kBAAC,cAAD,CACEC,MAAK,aAeLC,OAAQ,SAAAC,GAAI,OACV,yBAAKC,GAAG,YACN,yBAAKR,UAAU,wCACb,oDACA,oGAIF,yBAAKA,UAAU,SACZO,EAAKE,gBAAgBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC9B,kBAAClB,EAAD,eAAMmB,IAAKD,EAAKd,MAAUc,EAA1B,CAAgChB,MAAOQ,EAAcQ,EAAKhB,mBCbvDkB,UAZG,SAAC,GAAY,IACvBV,EADsB,EAAVG,KACSQ,QAAQL,MAAMM,QAAO,SAACC,EAAMC,GAA8D,OAApDD,EAAKC,EAAKN,KAAKO,cAAgBD,EAAKN,KAAKQ,UAAkBH,IAAQ,IACpI,OACE,kBAAC,IAAD,CAAQI,KAAK,QACX,yBAAKb,GAAG,QACN,kBAAC,EAAD,CAAUJ,cAAeA,Q,kCCXjC,gFAGe,SAASkB,EAAT,GAAmD,IAA1BzB,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,UAClD,OACE,uBAAGA,UAAWuB,IAAW,kBAAmBvB,GAAYwB,KAAMzB,GAC5D,0BAAMC,UAAU,SAASH,GACzB,kBAAC4B,EAAD,OAKN,SAASA,IACP,OACE,yBACEzB,UAAU,QACV0B,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,MAAM,8BAEN,0BACEC,EAAE,8GACFC,KAAK,eACLC,SAAS","file":"component---src-pages-showcases-js-b296ec85d1bf9653f363.js","sourcesContent":["import React from 'react';\nimport LinkWithArrow from './link-with-arrow';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst Showcase = ({ imageResolver }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allShowcaseYaml {\n          edges {\n            node {\n              name\n              label\n              description\n              image\n              url\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div id=\"showcase\">\n        <div className=\"section-title section-title--no-logo\">\n          <h3>Application Showcase</h3>\n          <p>\n            Our frameworks work together to enable world-class user experiences.\n          </p>\n        </div>\n        <div className=\"cases\">\n          {data.allShowcaseYaml.edges.map(({ node }) => (\n            <Case key={node.name} {...node} image={imageResolver[node.image]} />\n          ))}\n        </div>\n      </div>\n    )}\n  />\n);\n\nfunction Case({ description, image, label, name, url }) {\n  return (\n    <div className=\"case\">\n      <div className=\"frame\">\n        <div className=\"browser-bar\">\n          <div className=\"browser-bar-button\" />\n          <div className=\"browser-bar-button\" />\n          <div className=\"browser-bar-button\" />\n        </div>\n        <div\n          className=\"case-image\"\n          style={{ backgroundImage: `url(${image})` }}\n        />\n      </div>\n      <h1>{name}</h1>\n      <p className=\"description\">{description}</p>\n      <LinkWithArrow url={url} label={label} />\n    </div>\n  );\n}\n\nexport default Showcase;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport Showcase from '../components/showcase';\nimport Academy from '../components/academy';\n\nconst IndexPage = ({data}) => {\n  const imageResolver = data.allFile.edges.reduce((prev, curr) => {prev[curr.node.relativePath] = curr.node.publicURL; return prev;}, {});\n  return (\n    <Layout page=\"home\">\n      <div id=\"home\">\n        <Showcase imageResolver={imageResolver}/>\n        {/* <Academy /> */}\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\nexport const query = graphql`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n      edges {\n        node {\n          relativePath\n          name\n          extension\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\n/*\n    github {\n      nodes(\n        ids: [\n          \"MDEwOlJlcG9zaXRvcnk0ODAzMDIwNA==\"\n          \"MDEwOlJlcG9zaXRvcnk1MDM0MDkyOA==\"\n          \"MDEwOlJlcG9zaXRvcnk0MzkwMzg4Mg==\"\n          \"MDEwOlJlcG9zaXRvcnk1MjMwNDM2Mg==\"\n        ]\n      )\n    }\n*/","import React from 'react'\nimport classNames from 'classnames'\n\nexport default function LinkWithArrow({ label, url, className }) {\n  return (\n    <a className={classNames('link-with-arrow', className)} href={url}>\n      <span className=\"label\">{label}</span>\n      <Arrow />\n    </a>\n  )\n}\n\nfunction Arrow() {\n  return (\n    <svg\n      className=\"arrow\"\n      width=\"21\"\n      height=\"13\"\n      viewBox=\"0 0 21 13\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.8 5.143H0v1.714h17.14l-4.283 4.283 1.2 1.2 5.998-5.997-.173-.172.173-.172L14.058 0l-1.2 1.2 3.94 3.943z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n"],"sourceRoot":""}